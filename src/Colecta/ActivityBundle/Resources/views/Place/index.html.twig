{% extends '::frontend.html.twig' %}

{% block places 'active' %}

{% block javascripts %}
<script src="https://maps.googleapis.com/maps/api/js?sensor=false"></script>
<script>
      var geocoder;
      var map;
      var marker;
      
      function searchLocation() {
        if(!geocoder) {
            geocoder = new google.maps.Geocoder();
        }
        var address = document.getElementById('PlaceMapSearch').value;
        if(document.getElementById('PlaceName').value == '') {
            document.getElementById('PlaceName').value = address;
        }
        geocoder.geocode( { 'address': address}, function(results, status) {
          if (status == google.maps.GeocoderStatus.OK) {
            if(document.getElementById('map').className != 'active') {
                document.getElementById('map').className = 'active';
                map = new google.maps.Map(document.getElementById('map'), {zoom: 15,center:results[0].geometry.location, mapTypeId: google.maps.MapTypeId.TERRAIN, streetViewControl: false});
                google.maps.event.addListener(map, 'click', function(event) {
                    map.panTo(event.latLng);
                    marker.setPosition(event.latLng);
                    document.getElementById('PlaceLatitude').value = event.latLng.lat();
                    document.getElementById('PlaceLongitude').value = event.latLng.lng();
                });
            } else {
                map.setCenter(results[0].geometry.location);
            }
            
            if(!marker) {
                marker = new google.maps.Marker({
                    map: map,
                    position: results[0].geometry.location
                });
            } else {
                marker.setPosition(results[0].geometry.location);
            }
            
            document.getElementById('PlaceLatitude').value = results[0].geometry.location.lat();
            document.getElementById('PlaceLongitude').value = results[0].geometry.location.lng();
          } else {
            if(status == 'ZERO_RESULTS') {
                alert('No hemos encontrado ningun sitio con esas palabras. \nPrueba de nuevo');
            } else {
                alert('Ha ocurrido un error: ' + status);
            }
          }
        });
      }
</script>
{% endblock %}
{% block article %}

{% if app.user %}
<form onSubmit="if(document.getElementById('map').className != 'active'){searchLocation(); return false;}" action="{{ path('ColectaPlaceCreate') }}" method="POST" class="form-horizontal well hidden" onclick="this.className='form-horizontal well'">
<h2>Crear un nuevo Lugar</h2>
    <fieldset>
      <div class="control-group">
        <label class="control-label" for="PlaceMapSearch">Localización</label>
        <div class="controls">
          <div class="input-append">
            <input class="span2" id="PlaceMapSearch" size="16" type="text"><button class="btn" type="button" onClick="searchLocation()">Buscar en el mapa <i class="icon-search"></i></button>
          </div>
        </div>
      </div>
      <div class="control-group">
        <div class="controls">
          <div class="input-append">
            <div id="map"></div>
          </div>
        </div>
      </div>
      <div class="control-group">
        <label class="control-label" for="PlaceName">Nombre del lugar</label>
        <div class="controls">
          <input type="text" class="input-xlarge" id="PlaceName" name="name">
        </div>
      </div>
      <div class="control-group">
        <label class="control-label" for="PlaceDescription">Descripción</label>
        <div class="controls">
          <textarea class="input-xlarge" id="PlaceDescription" name="description" rows="3"></textarea>
        </div>
      </div>
      <div class="control-group">
        <label class="control-label" for="EventCategory">Categoría</label>
        <div class="controls">
          <select id="EventCategory" name="category">
            {% for category in categories %}
                <option value="{{ category.id }}">{{ category.name }}</option>
            {% endfor %}
          </select>
        </div>
      </div>
      <div class="form-actions">
        <input type="hidden" name="latitude" id="PlaceLatitude">
        <input type="hidden" name="longitude" id="PlaceLongitude">
        <button class="btn">Guardar como borrador</button>
        <button type="submit" class="btn btn-primary">Publicar ahora</button>
      </div>
    </fieldset>
</form>
{% endif %}

{% for item in items %}
<div class="item">
    {% include 'ColectaItemBundle:Default:itemheader.html.twig' with { 'item': item } only %}
    
    {% set path = 'Colecta' ~ item.type ~ ':mini.html.twig' %}
    {% set path = path | replace({'/':'Bundle:'}) %}
    {% include path with { 'item': item } only %}
    
    {% include 'ColectaItemBundle:Comment:comments.html.twig' with { 'comments': item.comments, item: item } only %}
</div>
{% endfor %}

<ul class="pager">
  <li class="previous{% if page == 1 %} disabled{% endif %}">
    <a href="{% if page > 1 %}{{ path('ColectaPlacePage', {'page': page - 1 }) }}{% else %}{% endif %}">&larr; Anteriores</a>
  </li>
  <li class="next{% if not thereAreMore %} disabled{% endif %}">
    <a href="{% if thereAreMore %}{{ path('ColectaPlacePage', {'page': page + 1 }) }}{% else %}{% endif %}">Siguientes &rarr;</a>
  </li>
</ul>

{% endblock %}