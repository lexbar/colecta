{% extends '::frontend.html.twig' %}

{% block places 'active' %}

{% block javascripts %}    
    <script src="/js/jquery.min.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?sensor=false"></script>
    <script>
        var geocoder;
        var map;
        var marker;
        
        function searchLocation() {
            if(!geocoder) {
                geocoder = new google.maps.Geocoder();
            }
            var address = document.getElementById('PlaceMapSearch').value;
            if(document.getElementById('PlaceName').value == '') {
                document.getElementById('PlaceName').value = address;
            }
            geocoder.geocode( { 'address': address}, function(results, status) {
              if (status == google.maps.GeocoderStatus.OK) {
                if(document.getElementById('map').className != 'active') {
                    document.getElementById('map').className = 'active';
                    map = new google.maps.Map(document.getElementById('map'), {zoom: 15,center:results[0].geometry.location, mapTypeId: google.maps.MapTypeId.TERRAIN, streetViewControl: false});
                    google.maps.event.addListener(map, 'click', function(event) {
                        map.panTo(event.latLng);
                        marker.setPosition(event.latLng);
                        document.getElementById('PlaceLatitude').value = event.latLng.lat();
                        document.getElementById('PlaceLongitude').value = event.latLng.lng();
                    });
                } else {
                    map.setCenter(results[0].geometry.location);
                }
                
                if(!marker) {
                    marker = new google.maps.Marker({
                        map: map,
                        position: results[0].geometry.location
                    });
                } else {
                    marker.setPosition(results[0].geometry.location);
                }
                
                document.getElementById('PlaceLatitude').value = results[0].geometry.location.lat();
                document.getElementById('PlaceLongitude').value = results[0].geometry.location.lng();
              } else {
                if(status == 'ZERO_RESULTS') {
                    alert('No hemos encontrado ningun sitio con esas palabras. \nPrueba de nuevo');
                } else {
                    alert('Ha ocurrido un error: ' + status);
                }
              }
            });
        }
        
        map = new google.maps.Map(document.getElementById('map'), {zoom: 15,center:new google.maps.LatLng({{ item.latitude }},{{ item.longitude }}), mapTypeId: google.maps.MapTypeId.TERRAIN, streetViewControl: false});
        marker = new google.maps.Marker({
                        map: map,
                        position: new google.maps.LatLng({{ item.latitude }},{{ item.longitude }})
                    });
        google.maps.event.addListener(map, 'click', function(event) {
            map.panTo(event.latLng);
            marker.setPosition(event.latLng);
            document.getElementById('PlaceLatitude').value = event.latLng.lat();
            document.getElementById('PlaceLongitude').value = event.latLng.lng();
        });

    var relations = [{% for related in item.related %}{"name":"{{ related.name }}","type":"{{ related.type }}","id":"{{ related.id }}","author":"{{ related.author.id }}"}{% if not loop.last %},{% endif %}{% endfor%}];
    var xhr;
    var searchagain = false;
    
    function showResults()
    {
        if($('#searchItem').val().length < 3) {
            $('#itemResults').html('');
            $('#itemResults').css('display','none');
            return;
        }
        
        $('#searchButton').attr("disabled", "disabled");
        
        if(xhr && xhr.readyState != 4) {
            searchagain = true;
        } else {        
            var excludeIds = '';
            
            for(var i = 0; i < relations.length; i++){ excludeIds += relations[i].id + ','; }
            
            xhr = $.ajax({
                url: '{{ path('ColectaAjaxSearch') }}?search='+$('#searchItem').val()+'&exclude='+excludeIds,
                success: function(json) {
                    $('#itemResults').html('');
                    $('#itemResults').css('display','none');
                    for(var i = 0; i < json.length; i++) {
                        $('#itemResults').append('<li><a tabindex="-1" href="#'+json[i].id+'" onClick="addRelation('+encodeItem(json[i])+');return false;"><strong>('+typeName(json[i].type)+')</strong> '+json[i].name+'</a></li>');
                    } 
                    if(json.length) { $('#itemResults').css('display','block'); }
                    $('#searchButton').removeAttr("disabled"); 
                },
                cache: false
            }).done(function() { 
                if(searchagain) {
                    searchagain = false;
                    showResults();
                }
            });
        }
    }
    
    function addRelation(item) {
        relations.push(item);
        redrawRelateds();
        
        $('#itemResults').html('');
        $('#itemResults').css('display','none');
    }
    
    function removeRelation(id) {
        for(var i = 0; i < relations.length; i++){
            if(relations[i].id == id) {
                relations.splice(i,1);
            }
        }
        redrawRelateds();
    }
    
    function redrawRelateds() {
        $('#showRelateds').html('');
        $('#relateds').val('');
        for(var i = 0; i < relations.length; i++){
            $('#showRelateds').append('<p><button type="button" onClick="removeRelation('+relations[i].id+')" class="btn btn-danger btn-mini"><i class="icon-remove icon-white"></i></button> <strong> '+relations[i].name+'</strong></p>');
            $('#relateds').val($('#relateds').val() + relations[i].id + ',');
        }
    }
    
    function typeName(type) {
        switch(type) {
            case 'Item/Post': return 'Publicación'; break;
            case 'Files/File': return 'Archivo'; break;
            case 'Files/Folder': return 'Carpeta'; break;
            case 'Colective/Poll': return 'Encuesta'; break;
            case 'Colective/Contest': return 'Concurso'; break;
            case 'Activity/Place': return 'Lugar'; break;
            case 'Activity/Route': return 'Ruta'; break;
            case 'Activity/Event': return 'Evento'; break;
        }
        return type;
    }
    
    function encodeItem(item) {
        return '{\'name\':\''+item.name.replace(/&#039;/g,'\\\'')+'\',\'type\':\''+item.type+'\',\'id\':\''+item.id+'\',\'author\':\''+item.author.replace(/&#039;/g,'\\\'')+'\'}';
    }
    
    function toggleCategoryCreate() {
        var button = $('#categoryCreateButton');
        if(button.hasClass('newcategory')) {
            button.removeClass('newcategory').addClass('selectcategory');
            button.html('Seleccionar una categoría existente');
            $('#EventCategory').hide();
            $('#EventNewCategory').show().focus();
        } else {
            button.removeClass('selectcategory').addClass('newcategory');
            button.html('Crear una nueva categoría');
            $('#EventCategory').show();
            $('#EventNewCategory').hide().attr('value','');
        }
    }
    
    </script>
{% endblock %}
{% block article %}

{% if item.author == app.user %}

<div class="title-block">
    <h2>Editar Lugar</h2>
</div>

<form action="{{ path('ColectaPlaceEdit', {slug: item.slug}) }}" method="POST" class="form-horizontal well">
    <fieldset>
      <div class="control-group">
        <label class="control-label" for="PlaceMapSearch">Localización</label>
        <div class="controls">
          <div class="input-append">
            <input class="span2" id="PlaceMapSearch" size="16" type="text"><button class="btn" type="button" onClick="searchLocation()">Buscar en el mapa <i class="icon-search"></i></button>
          </div>
        </div>
      </div>
      <div class="control-group">
        <div class="controls">
          <div class="input-append">
            <div id="map" class="active"></div>
          </div>
        </div>
      </div>
      <hr>
      <div class="control-group">
        <label class="control-label" for="PlaceName">Nombre del lugar</label>
        <div class="controls">
          <input type="text" class="input-xlarge" id="PlaceName" name="name" value="{{ item.name }}">
        </div>
      </div>
      <div class="control-group">
        <label class="control-label" for="PlaceDescription">Descripción</label>
        <div class="controls">
          <textarea class="input-xlarge" id="PlaceDescription" name="description" rows="3">{{ item.description }}</textarea>
        </div>
      </div>
      
      <div class="control-group">
        <label class="control-label" for="EventCategory">Categoría</label>
        <div class="controls">
          <select id="EventCategory" name="category">
            {% for category in categories %}
                <option value="{{ category.id }}"{% if item.category.slug == category.slug %} selected{% endif %}>{{ category.name }}</option>
            {% endfor %}
          </select><input type="text" id="EventNewCategory" name="newCategory" style="display:none"><br>
          <button class="btn btn-link newcategory" type="button" onClick="toggleCategoryCreate()" id="categoryCreateButton">Crear una nueva categoría</button>
        </div>
      </div>
      
      <div class="form-actions">
        <input type="hidden" name="latitude" id="PlaceLatitude" value="{{ item.latitude }}">
        <input type="hidden" name="longitude" id="PlaceLongitude" value="{{ item.longitude }}">
        <button type="submit" class="btn btn-primary">Actualizar</button>
      </div>
    </fieldset>
</form>

{% include 'ColectaItemBundle:Default:relateItems.html.twig' with { 'item': item } only %}

{% endif %}

{% endblock %}