{% extends '::frontend.html.twig' %}

{% block posts 'active' %}

{% block javascripts %}    
    
    {% set boundsswlat, boundsswlng = track[0].latitude, track[0].longitude %}
    {% set boundsnelat, boundsnelng = track[0].latitude, track[0].longitude %} 
    {% set points = '[' ~ track[0].latitude ~ ',' ~ track[0].longitude ~ ']' %}
    
    {% for tp in track %}
        {% if not loop.first %}
            {% set points = points ~ ',[' ~ tp.latitude ~ ',' ~ tp.longitude ~ ']' %}
            {% if tp.latitude < boundsswlat %}{% set boundsswlat = tp.latitude %}{% endif %}
            {% if tp.longitude < boundsswlng %}{% set boundsswlng = tp.longitude %}{% endif %}
            {% if tp.latitude > boundsnelat %}{% set boundsnelat = tp.latitude %}{% endif %}
            {% if tp.longitude > boundsnelng %}{% set boundsnelng = tp.longitude %}{% endif %}
        {% endif %}
    {% endfor %}
    
    <script src="/js/jquery.min.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?sensor=false"></script>
    <script>
    
    var map;
    var polyline = [];
    var points = [{{ points }}];
    var bounds = new google.maps.LatLngBounds(new google.maps.LatLng({{ boundsswlat }}, {{ boundsswlng }}), new google.maps.LatLng({{ boundsnelat }}, {{ boundsnelng }}));
    
    function initialize() {   
        
        var mapOptions = {
            zoom: 3,
            center: bounds.getCenter(),
            mapTypeId: google.maps.MapTypeId.TERRAIN, 
            streetViewControl: false
        };
        
        map = new google.maps.Map(document.getElementById('map'), mapOptions);
        map.fitBounds(bounds);
        
        $.each(points, function(index, value) { 
            polyline.push(new google.maps.LatLng(value[0], value[1]));
        });
        
        var path = new google.maps.Polyline({
            path: polyline,
            strokeColor: '#FF0000',
            strokeOpacity: 1.0,
            strokeWeight: 2
        });
        
        path.setMap(map);
    }

    var relations = [{% for related in item.related %}{"name":"{{ related.name }}","type":"{{ related.type }}","id":"{{ related.id }}","author":"{{ related.author.id }}"}{% if not loop.last %},{% endif %}{% endfor%}];
    var xhr;
    var searchagain = false;
    
    function showResults()
    {
        if($('#searchItem').val().length < 3) {
            $('#itemResults').html('');
            $('#itemResults').css('display','none');
            return;
        }
        
        $('#searchButton').attr("disabled", "disabled");
        
        if(xhr && xhr.readyState != 4) {
            searchagain = true;
        } else {        
            var excludeIds = '';
            
            for(var i = 0; i < relations.length; i++){ excludeIds += relations[i].id + ','; }
            
            xhr = $.ajax({
                url: '{{ path('ColectaAjaxSearch') }}?search='+$('#searchItem').val()+'&exclude='+excludeIds,
                success: function(json) {
                    $('#itemResults').html('');
                    $('#itemResults').css('display','none');
                    for(var i = 0; i < json.length; i++) {
                        $('#itemResults').append('<li><a tabindex="-1" href="#'+json[i].id+'" onClick="addRelation('+encodeItem(json[i])+');return false;"><strong>('+typeName(json[i].type)+')</strong> '+json[i].name+'</a></li>');
                    } 
                    if(json.length) { $('#itemResults').css('display','block'); }
                    $('#searchButton').removeAttr("disabled"); 
                },
                cache: false
            }).done(function() { 
                if(searchagain) {
                    searchagain = false;
                    showResults();
                }
            });
        }
    }
    
    function addRelation(item) {
        relations.push(item);
        redrawRelateds();
        
        $('#itemResults').html('');
        $('#itemResults').css('display','none');
    }
    
    function removeRelation(id) {
        for(var i = 0; i < relations.length; i++){
            if(relations[i].id == id) {
                relations.splice(i,1);
            }
        }
        redrawRelateds();
    }
    
    function redrawRelateds() {
        $('#showRelateds').html('');
        $('#relateds').val('');
        for(var i = 0; i < relations.length; i++){
            $('#showRelateds').append('<p><button type="button" onClick="removeRelation('+relations[i].id+')" class="btn btn-danger btn-mini"><i class="icon-remove icon-white"></i></button> <strong> '+relations[i].name+'</strong></p>');
            $('#relateds').val($('#relateds').val() + relations[i].id + ',');
        }
    }
    
    function typeName(type) {
        switch(type) {
            case 'Item/Post': return 'Publicación'; break;
            case 'Files/File': return 'Archivo'; break;
            case 'Files/Folder': return 'Carpeta'; break;
            case 'Colective/Poll': return 'Encuesta'; break;
            case 'Colective/Contest': return 'Concurso'; break;
            case 'Activity/Place': return 'Lugar'; break;
            case 'Activity/Route': return 'Ruta'; break;
            case 'Activity/Route': return 'Routeo'; break;
        }
        return type;
    }
    
    function encodeItem(item) {
        return '{\'name\':\''+item.name+'\',\'type\':\''+item.type+'\',\'id\':\''+item.id+'\',\'author\':\''+item.author+'\'}';
    }
    
    </script>
{% endblock %}
{% block article %}

{% if item.author == app.user %}
<form action="{{ path('ColectaPostEdit', {slug:item.slug}) }}" method="POST" class="form-horizontal well">
<h2>Datos de la Ruta</h2>
    <fieldset>
      <div class="control-group">
        <label class="control-label" for="RouteFile">Nombre</label>
        <div class="controls">
          {{ form_widget(form.name) }}
        </div>
      </div>
      <div class="control-group">
        <label class="control-label" for="RouteFile">Descripción</label>
        <div class="controls">
          {{ form_widget(form.description) }}
        </div>
      </div>
      <div class="control-group">
        <label class="control-label" for="RouteName">Distancia</label>
        <div class="controls">
          <div class="input-append">
            {{ form_widget(form.distance, {'attr':{'class':'input-small','value': trackdata.distance}}) }}<span class="add-on"> km</span>
          </div>
        </div>
      </div>
      <div class="control-group">
        <label class="control-label" for="RouteFile">Subida</label>
        <div class="controls">
          <div class="input-append">
            {{ form_widget(form.uphill, {'attr':{'class':'input-small','value': trackdata.uphill}}) }}<span class="add-on"> metros</span>
          </div>
        </div>
      </div>
      <div class="control-group">
        <label class="control-label" for="RouteFile">Bajada</label>
        <div class="controls">
          <div class="input-append">
            {{ form_widget(form.downhill, {'attr':{'class':'input-small','value': trackdata.downhill}}) }}<span class="add-on"> metros</span>
          </div>
        </div>
      </div>
      <div class="control-group">
        <label class="control-label" for="RouteFile">Tiempo</label>
        <div class="controls">
          {% set secconds, minutes, hours, days = 0, 0, 0, 0 %}
          {% if trackdata.time < 60 %}
            {% set secconds = trackdata.time %}
          {% else %}
            {% set minutes = trackdata.time // 60 %}
            {% set secconds = trackdata.time - minutes * 60 %}
            
            {% if minutes >= 60 %}
                {% set hours = minutes // 60 %}
                {% set minutes = minutes - hours * 60 %}
                
                {% if hours >= 24 %}
                    {% set days = hours // 24 %}
                    {% set hours = hours - days * 24 %}
                {% endif %}
            {% endif %}
          {% endif %}
            <input type="text" class="spanhalf" name="days" value="{{ days }}"> dias,  
            
            <select name="hours" style="width:auto">
            {% for hour in 0..23 %}
                <option value="{{ hour }}"{% if hour == hours %}selected="selected"{% endif%}>{{ hour }}</option>
            {% endfor %}
            </select>            
             horas y 
            
            <select name="minutes" style="width:auto">
            {% for minute in 0..59 %}
                <option value="{{ minute }}"{% if minute == minutes %}selected="selected"{% endif%}>{{ minute }}</option>
            {% endfor %}
            </select>
             minutos 
        </div>
      </div>
      <div class="control-group">
        <label class="control-label" for="RouteFile">Velocidad media</label>
        <div class="controls">
          <div class="input-append">
            {{ form_widget(form.avgspeed, {'attr':{'value': trackdata.avgspeed}}) }}<span class="input-small uneditable-input">{{ trackdata.avgspeed }}</span><span class="add-on"> km/h</span>
          </div>
        </div>
      </div>
      <div class="control-group">
        <label class="control-label" for="RouteFile">Velocidad máxima</label>
        <div class="controls">
          <div class="input-append">
            {{ form_widget(form.maxspeed, {'attr':{'value': trackdata.maxspeed}}) }}<span class="input-small uneditable-input">{{ trackdata.maxspeed }}</span><span class="add-on"> km/h</span>
          </div>
        </div>
      </div>
      <div class="control-group">
        <label class="control-label" for="RouteFile">Cota inferior</label>
        <div class="controls">
          <div class="input-append">
            {{ form_widget(form.minheight, {'attr':{'class':'input-small','value': trackdata.minheight}}) }}<span class="add-on"> metros</span>
          </div>
        </div>
      </div>
      <div class="control-group">
        <label class="control-label" for="RouteFile">Cota superior</label>
        <div class="controls">
          <div class="input-append">
            {{ form_widget(form.maxheight, {'attr':{'class':'input-small','value': trackdata.maxheight}}) }}<span class="add-on"> metros</span>
          </div>
        </div>
      </div>
      <div class="control-group">
        <label class="control-label" for="RouteName">Dificultad</label>
        <div class="controls">
            <label class="radio">
                <input type="radio" name="difficulty" id="RouteDifficultyEasy" value="easy"{% if item.difficulty == 'easy' %} checked{% endif %}>
                <img src="/img/difficulty/easy.gif" alt="fácil" width="70" height="12">
                Fácil
            </label>
            <label class="radio">
                <input type="radio" name="difficulty" id="RouteDifficultyModerate" value="moderate"{% if item.difficulty == 'moderate' %} checked{% endif %}>
                <img src="/img/difficulty/moderate.gif" alt="moderado" width="70" height="12">
                Moderado
            </label>
            <label class="radio">
                <input type="radio" name="difficulty" id="RouteDifficultyHard" value="hard"{% if item.difficulty == 'hard' %} checked{% endif %}>
                <img src="/img/difficulty/hard.gif" alt="difícil" width="70" height="12">
                Difícil
            </label>
            <label class="radio">
                <input type="radio" name="difficulty" id="RouteDifficultyVeryhard" value="very hard"{% if item.difficulty == 'very hard' %} checked{% endif %}>
                <img src="/img/difficulty/very-hard.gif" alt="muy difícil" width="70" height="12">
                Muy difícil
            </label>
            <label class="radio">
                <input type="radio" name="difficulty" id="RouteDifficultyExpertsonly" value="experts only"{% if item.difficulty == 'experts only' %} checked{% endif %}>
                <img src="/img/difficulty/experts-only.gif" alt="sólo expertos" width="70" height="12">
                Sólo expertos
            </label>
        </div>
      </div>
      
      {{ form_rest(form) }}
      
      <input type="hidden" value="{% if trackdata.isloop %}1{% else %}0{% endif %}" name="isloop">
      
      <div class="control-group">
        <label class="control-label" for="RouteCategory">Categoría</label>
        <div class="controls">
          <select id="RouteCategory" name="category">
            {% for category in categories %}
                <option value="{{ category.id }}"{% if item.category.id == category.id %}selected="selected"{% endif %}>{{ category.name }}</option>
            {% endfor %}
          </select>
        </div>
      </div>
      
      <div class="form-actions">
        <button class="btn">Guardar como borrador</button>
        <button type="submit" class="btn btn-primary" id="RouteSubmit">Publicar ahora</button>
      </div>
    </fieldset>
</form>

{% include 'ColectaItemBundle:Default:relateItems.html.twig' with { 'item': item } only %}

{% endif %}

{% endblock %}